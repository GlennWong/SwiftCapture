name: Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Get version from release tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Update version in release config and source code
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        
        # Update release-config.json
        jq ".version = \"$VERSION\"" release-config.json > tmp.json
        mv tmp.json release-config.json
        
        # Update version in SwiftCaptureCommand.swift
        sed -i '' -E "s/version: \"[0-9]+\.[0-9]+\.[0-9]+\"/version: \"$VERSION\"/" Sources/SwiftCapture/CLI/SwiftCaptureCommand.swift
        
    - name: Build universal binary and update formula
      run: |
        chmod +x scripts/release-automation.sh
        ./scripts/release-automation.sh ${{ steps.version.outputs.version }}
        
    - name: Create release archive info
      id: archive
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        ARCHIVE_NAME="scap-v${VERSION}-macos.tar.gz"
        SHA256=$(shasum -a 256 "$ARCHIVE_NAME" | cut -d' ' -f1)
        echo "archive_name=$ARCHIVE_NAME" >> $GITHUB_OUTPUT
        echo "sha256=$SHA256" >> $GITHUB_OUTPUT
        
    - name: Upload release assets and update release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: SwiftCapture v${{ steps.version.outputs.version }}
        body: |
          ## SwiftCapture v${{ steps.version.outputs.version }}
          
          Professional screen recording tool for macOS with comprehensive CLI interface.
          
          **ðŸŽ‰ Universal Binary**: This release includes a universal binary that supports both Intel and Apple Silicon Macs!
          
          ### Installation via Homebrew (Recommended)
          ```bash
          brew tap GlennWong/swiftcapture
          brew install swiftcapture
          ```
          
          ### Manual Installation
          1. Download the archive below
          2. Extract: `tar -xzf ${{ steps.archive.outputs.archive_name }}`
          3. Run: `./install.sh`
          
          ### System Requirements
          - macOS 12.3 (Monterey) or later
          - Intel or Apple Silicon Mac (Universal Binary)
          - Screen Recording permission
          - Microphone permission (optional)
          
          ### Usage
          ```bash
          scap --help                     # Show help
          scap --screen-list              # List available screens  
          scap --duration 5000            # Record for 5 seconds
          scap --output recording.mov     # Specify output file
          ```
          
          ### Checksums
          - SHA256: `${{ steps.archive.outputs.sha256 }}`
        files: |
          ${{ steps.archive.outputs.archive_name }}
          ${{ steps.archive.outputs.archive_name }}.sha256
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Checkout homebrew-swiftcapture repository
      uses: actions/checkout@v4
      with:
        repository: GlennWong/homebrew-swiftcapture
        token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        path: homebrew-tap
        
    - name: Update Homebrew formula in tap repository
      run: |
        # Copy the updated formula to the tap repository
        cp swiftcapture.rb homebrew-tap/Formula/swiftcapture.rb
        
        # Configure git
        cd homebrew-tap
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Commit and push changes
        git add Formula/swiftcapture.rb
        git commit -m "Update SwiftCapture to v${{ steps.version.outputs.version }}"
        git push origin main
        
    - name: Upload formula as artifact
      uses: actions/upload-artifact@v4
      with:
        name: homebrew-formula
        path: swiftcapture.rb